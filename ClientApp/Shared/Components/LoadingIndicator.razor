@if (IsVisible)
{
    <div class="@WrapperClass">
        <div class="@SpinnerClass" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        @if (!string.IsNullOrEmpty(Message))
        {
            <div class="mt-2 text-center">@Message</div>
        }
    </div>
}

<style>
    .loading-fade-in {
        animation: fadeIn 0.3s ease-in;
    }

    .loading-fade-out {
        animation: fadeOut 0.3s ease-out;
    }

    @@keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @@keyframes fadeOut {
        from { opacity: 1; }
        to { opacity: 0; }
    }
</style>

@code {
    /// <summary>
    /// Gets or sets whether the loading indicator is visible
    /// </summary>
    [Parameter]
    public bool IsVisible { get; set; }

    /// <summary>
    /// Gets or sets the loading message to display
    /// </summary>
    [Parameter]
    public string? Message { get; set; }

    /// <summary>
    /// Gets or sets the size variant for the spinner
    /// </summary>
    [Parameter]
    public SpinnerSize Size { get; set; } = SpinnerSize.Medium;

    /// <summary>
    /// Gets or sets whether to center the loading indicator
    /// </summary>
    [Parameter]
    public bool IsCentered { get; set; } = true;

    /// <summary>
    /// Gets or sets any additional CSS classes for the wrapper element
    /// </summary>
    [Parameter]
    public string? AdditionalClasses { get; set; }

    private string WrapperClass => string.Join(" ", new[]
    {
        "loading-fade-in",
        IsCentered ? "text-center" : "",
        AdditionalClasses
    }.Where(c => !string.IsNullOrEmpty(c)));

    private string SpinnerClass => string.Join(" ", new[]
    {
        "spinner-border",
        Size switch
        {
            SpinnerSize.Small => "spinner-border-sm",
            SpinnerSize.Large => "spinner-border-lg",
            _ => ""
        },
        "text-primary"
    });

    public enum SpinnerSize
    {
        Small,
        Medium,
        Large
    }
}