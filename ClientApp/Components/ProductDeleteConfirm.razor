@using ClientApp.Models
@using ClientApp.Shared.Components

<StatusModal IsVisible="true"
            Title="Confirm Delete"
            Status="StatusModal.StatusType.Error"
            ShowCloseButton="true"
            ShowConfirmButton="true"
            ConfirmButtonText="Delete"
            OnClose="OnCancel"
            OnConfirm="OnConfirm">
    <div class="delete-confirmation">
        <p class="mb-3">Are you sure you want to delete this product?</p>

        @if (Product != null)
        {
            <div class="product-summary card">
                <div class="card-body">
                    <h5 class="card-title">@Product.Name</h5>
                    @if (Product.Category != null)
                    {
                        <h6 class="card-subtitle mb-2 text-muted">@Product.Category.Name</h6>
                    }
                    <p class="mb-1"><strong>Price:</strong> @Product.Price.ToString("C")</p>
                    <p class="mb-0"><strong>Stock:</strong> @Product.Stock</p>
                </div>
            </div>
        }

        @if (IsLoading)
        {
            <div class="text-center mt-3">
                <LoadingIndicator IsVisible="true" Message="Deleting product..." />
            </div>
        }

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="alert alert-danger mt-3" role="alert">
                @ErrorMessage
            </div>
        }
    </div>
</StatusModal>

<style>
    .delete-confirmation {
        text-align: center;
    }

    .product-summary {
        margin: 1rem auto;
        max-width: 400px;
        background-color: #f8f9fa;
    }
</style>

@code {
    /// <summary>
    /// Gets or sets the product to delete
    /// </summary>
    [Parameter]
    public Product? Product { get; set; }

    /// <summary>
    /// Gets or sets whether the delete operation is in progress
    /// </summary>
    [Parameter]
    public bool IsLoading { get; set; }

    /// <summary>
    /// Gets or sets the error message to display
    /// </summary>
    [Parameter]
    public string? ErrorMessage { get; set; }

    /// <summary>
    /// Event callback when the delete is confirmed
    /// </summary>
    [Parameter]
    public EventCallback OnConfirm { get; set; }

    /// <summary>
    /// Event callback when the delete is cancelled
    /// </summary>
    [Parameter]
    public EventCallback OnCancel { get; set; }
}